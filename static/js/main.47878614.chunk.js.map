{"version":3,"sources":["redux/actions.js","components/Contact.jsx","components/Cv.jsx","components/Education.jsx","components/Me.jsx","components/Experience.jsx","components/MyApps.jsx","components/News.jsx","components/Help.jsx","components/Unrecognized.jsx","components/CommandInput.jsx","components/CurrentListedItems.jsx","components/Terminal.jsx","components/GitCat.jsx","App.jsx","redux/initialState.js","redux/store.js","redux/reducers.js","index.js"],"names":["componentEnterStack","componentObj","data","type","clearStack","triggerTerminalScroll","Contact","props","state","gitHubUrl","linkedInUrl","formspreeActionUrl","id","className","href","this","target","rel","action","method","name","placeholder","React","Component","Cv","resumeUrl","Education","schoolTitle","schoolMajor","Me","aboutText","roleText","Experience","experienceList","roleAndCompany","timeLine","workDid","techUsed","map","exp","index","key","MyApps","appList","appTitle","appUrl","appDescription","appTechStack","appItem","News","getHeadlineNewsList","countryCode","a","fetch","topHeadLinesEndpoint","pageSize","headers","Authorization","apiKey","fetchResult","ok","json","articles","headlineNewsList","setState","onClick","newsItem","url","title","description","publishedAt","Help","showMe","showResume","showExp","showMyApps","showCon","showEdu","showHelp","ConnectedHelp","showNews","clearTerminal","connect","Unrecognized","CommandInput","updateCommand","event","currentCommand","value","enterCommand","keyCode","toLowerCase","spellCheck","onChange","onKeyUp","mapDispatchToProps","connector","CurrentListedItems","guannanStack","currItem","Terminal","introStringGrowing","terminalLoadingEllipsis","loadingCoverStyleObj","terminalRef","createRef","ellipsisStr","timer1Stop","timer1","setInterval","clearInterval","setTimeout","greetingsArr","split","i","timer2","currCharStr","length","terminalDOM","current","scrollTop","scrollHeight","clientHeight","ref","style","terminalScrollTrigger","GitCat","handleEnter","catClass","handleLeave","getRidOfBubble","chatBubbleVisibility","chatMsgList","randomMsgId","timer","randomIndex","Math","floor","random","onMouseEnter","onMouseLeave","visibility","App","initialState","store","createStore","prevState","nextState","clonedeep","push","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"+gBAAA,SAASA,EAAoBC,GACzB,MAAO,CACHC,KAAMD,EACNE,KAAM,yBAId,SAASC,IACL,MAAO,CACHD,KAAM,eAId,SAASE,IACL,MAAO,CACHF,KAAM,2B,WCZOG,G,wDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,UAAW,+BACXC,YAAa,kDACbC,mBAAoB,mCALT,E,qDASf,OACI,yBAAKC,GAAG,WACJ,yBAAKA,GAAG,gBAAgBC,UAAU,4BAC9B,uBAAGA,UAAU,oBACb,uBAAGC,KAAMC,KAAKP,MAAMC,UAAWO,OAAO,SAASC,IAAI,uBAAnD,UACW,uBAAGJ,UAAU,8BACpB,6BACJ,uBAAGA,UAAU,sBACb,uBAAGC,KAAMC,KAAKP,MAAME,YAAaM,OAAO,SAASC,IAAI,uBAArD,YACa,uBAAGJ,UAAU,8BACtB,8BAER,yBAAKD,GAAG,gBAAR,kCACA,yBAAKA,GAAG,cACJ,0BAAMM,OAAQH,KAAKP,MAAMG,mBAAoBQ,OAAO,OAAOH,OAAO,SAASC,IAAI,uBAC3E,yBAAKJ,UAAU,SACX,2BAAOV,KAAK,QAAQiB,KAAK,eAAeC,YAAY,WAAWR,UAAU,eAE7E,yBAAKA,UAAU,SACX,8BAAUO,KAAK,aAAaC,YAAY,aAAaR,UAAU,kBAEnE,yBAAKA,UAAU,SACX,4BAAQV,KAAK,SAASU,UAAU,sBAAhC,wB,GAhCSS,IAAMC,YCAtBC,G,wDACjB,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTiB,UAAW,sFAHA,E,qDAOf,OACI,yBAAKb,GAAG,KAAKC,UAAU,4BACnB,uBAAGA,UAAU,gBACb,uBAAGC,KAAMC,KAAKP,MAAMiB,UAAWT,OAAO,SAASC,IAAI,uBAC/C,0BAAMJ,UAAU,cAAhB,iBACA,0BAAMA,UAAU,aAAhB,UAFJ,IAE8C,uBAAGA,UAAU,mC,GAb3CS,IAAMC,YCAjBG,G,wDACjB,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTmB,YAAa,sCACbC,YAAa,uEAJF,E,qDAQf,OACI,wBAAIhB,GAAG,UACH,wBAAIC,UAAU,eACV,yBAAKA,UAAU,sCACX,uBAAGA,UAAU,eACRE,KAAKP,MAAMmB,aAEhB,uBAAGd,UAAU,eACRE,KAAKP,MAAMoB,oB,GAjBDN,IAAMC,YCAxBM,G,8DACjB,WAAYtB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTsB,UAAW,uYACXC,SAAU,wDAJC,E,qDAQf,OACI,yBAAKlB,UAAU,sCAAsCD,GAAG,MACpD,uBAAGC,UAAU,SAAb,gBACA,uBAAGA,UAAU,oBAAb,iBAA+CE,KAAKP,MAAMuB,UAC1D,uBAAGlB,UAAU,oBAAb,IAAkCE,KAAKP,MAAMsB,UAA7C,U,GAbgBR,IAAMC,YCAjBS,G,wDACjB,WAAYzB,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTyB,eAAgB,CACZ,CACIC,eAAgB,iFAChBC,SAAU,qBACVC,QAAS,+GACTC,SAAU,sHAEd,CACIH,eAAgB,iEAChBC,SAAU,mCACVC,QAAS,oTACTC,SAAU,sHAEd,CACIH,eAAgB,6CAChBC,SAAU,mCACVC,QAAS,oPACTC,SAAU,uEAEd,CACIH,eAAgB,sDAChBC,SAAU,8BACVC,QAAS,mKACTC,SAAU,2BAEd,CACIH,eAAgB,kDAChBC,SAAU,mCACVC,QAAS,mKACTC,SAAU,6BAhCP,E,qDAsCf,OACI,wBAAIzB,GAAG,UAECG,KAAKP,MAAMyB,eAAeK,KAAI,SAACC,EAAKC,GAChC,OACI,wBAAI3B,UAAU,WAAW4B,IAAKD,GAC1B,yBAAK3B,UAAU,kDACX,uBAAGA,UAAU,SAAS0B,EAAIL,gBAC1B,uBAAGrB,UAAU,YAAY0B,EAAIH,SAC7B,uBAAGvB,UAAU,YAAb,eAAqC0B,EAAIJ,UACzC,uBAAGtB,UAAU,YAAb,mBAAyC0B,EAAIF,oB,GAjDzCf,IAAMC,YCAzBmB,G,wDACjB,WAAYnC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTmC,QAAS,CACL,CACIC,SAAU,oBACVC,OAAQ,oDACRC,eAAgB,oHAChBC,aAAc,yEAElB,CACIH,SAAU,+BACVC,OAAQ,4DACRC,eAAgB,uHAChBC,aAAc,gGAElB,CACIH,SAAU,qBACVC,OAAQ,kDACRC,eAAgB,wHAChBC,aAAc,oFAElB,CACIH,SAAU,wBACVC,OAAQ,qDACRC,eAAgB,sIAChBC,aAAc,kEAElB,CACIH,SAAU,oBACVC,OAAQ,iDACRC,eAAgB,uHAChBC,aAAc,kEAElB,CACIH,SAAU,mBACVC,OAAQ,qDACRC,eAAgB,wLAChBC,aAAc,uDAtCX,E,qDA4Cf,OACI,wBAAInC,GAAG,WAECG,KAAKP,MAAMmC,QAAQL,KACf,SAACU,EAASR,GACN,OACI,wBAAI3B,UAAU,WAAW4B,IAAKD,GAC1B,yBAAK3B,UAAU,gDACX,uBAAGA,UAAU,SACT,uBAAGC,KAAMkC,EAAQH,OAAQ7B,OAAO,SAASC,IAAI,uBACxC+B,EAAQJ,SADb,IACuB,uBAAG/B,UAAU,+BAGxC,uBAAGA,UAAU,YACRmC,EAAQF,eAAe,6BAAM,6BADlC,mBAEqBE,EAAQD,wB,GA5DjCzB,IAAMC,Y,yBCArB0B,G,wDACjB,WAAY1C,GAAQ,IAAD,8BACf,cAAMA,IAQV2C,oBATmB,uCASG,WAAOC,GAAP,eAAAC,EAAA,sEACMC,MAAM,GAAD,OAAI,EAAK7C,MAAM8C,qBAAf,oBAA+CH,EAA/C,qBAAuE,EAAK3C,MAAM+C,UAAY,CACvHC,QAAS,CACLC,cAAe,EAAKjD,MAAMkD,UAHhB,YACdC,EADc,QAMFC,GANE,wCAQeD,EAAYE,OAR3B,mBAQmCC,SARnC,MAQVC,iBARU,WAOTC,SAPS,8CAWRL,EAXQ,4CATH,sDAEf,EAAKnD,MAAQ,CACTuD,iBAAkB,GAClBL,OAAQ,mCACRJ,qBAAsB,uCACtBC,SAAU,IANC,E,qDAuBT,IAAD,OACL,OACI,wBAAI3C,GAAG,WACH,yBAAKC,UAAU,gDACX,uBAAGA,UAAU,UAAb,8DACA,4BAAQV,KAAK,SAASU,UAAU,UAAUoD,QAAS,WAAQ,EAAKf,oBAAoB,QAApF,WACA,4BAAQ/C,KAAK,SAASU,UAAU,UAAUoD,QAAS,WAAQ,EAAKf,oBAAoB,QAApF,WACA,4BAAQ/C,KAAK,SAASU,UAAU,UAAUoD,QAAS,WAAQ,EAAKf,oBAAoB,QAApF,YAGAnC,KAAKP,MAAMuD,iBAAiBzB,KAAI,SAAC4B,EAAU1B,GACvC,OACI,wBAAI3B,UAAU,YAAY4B,IAAKD,GAC3B,yBAAK3B,UAAU,iDACX,uBAAGA,UAAU,SACT,uBAAGC,KAAMoD,EAASC,IAAKnD,OAAO,SAASC,IAAI,uBACtCiD,EAASE,MADd,IACqB,uBAAGvD,UAAU,+BAGtC,uBAAGA,UAAU,aACiB,OAAzBqD,EAASG,aAAiD,KAAzBH,EAASG,aAAsD,qBAAzBH,EAASG,YAA8B,+BAAiCH,EAASG,YAAY,6BAAM,6BAD/K,mBAEqBH,EAASI,uB,GA7ChChD,IAAMC,YCWlCgD,E,4MACFC,OAAS,WACL,EAAKjE,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,EAAKO,MAAMF,yB,EAEfoE,WAAa,WACT,EAAKlE,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,EAAKO,MAAMF,yB,EAEfqE,QAAU,WACN,EAAKnE,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,EAAKO,MAAMF,yB,EAEfsE,WAAa,WACT,EAAKpE,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,EAAKO,MAAMF,yB,EAEfuE,QAAU,WACN,EAAKrE,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,EAAKO,MAAMF,yB,EAEfwE,QAAU,WACN,EAAKtE,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,EAAKO,MAAMF,yB,EAEfyE,SAAW,WASP,EAAKvE,MAAMP,oBAAoB,kBAAC+E,EAAD,OAC/B,EAAKxE,MAAMF,yB,EAEf2E,SAAW,WACP,EAAKzE,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,EAAKO,MAAMF,yB,EAEf4E,cAAgB,WACZ,EAAK1E,MAAMH,aACX,EAAKG,MAAMF,yB,uDAGX,OACI,wBAAIO,GAAG,WACH,wBAAIC,UAAU,cAAd,uCACA,wBAAIA,UAAU,aACV,0BAAMA,UAAU,YAAhB,QADJ,+BACsE,4BAAQV,KAAK,SAASU,UAAU,qBAAqBoD,QAASlD,KAAKyD,QAAnE,OAEtE,wBAAI3D,UAAU,aACV,0BAAMA,UAAU,YAAhB,SADJ,2BACmE,4BAAQV,KAAK,SAASU,UAAU,qBAAqBoD,QAASlD,KAAK8D,SAAnE,QAEnE,wBAAIhE,UAAU,aACV,0BAAMA,UAAU,YAAhB,SADJ,8BACsE,4BAAQV,KAAK,SAASU,UAAU,qBAAqBoD,QAASlD,KAAK4D,YAAnE,QAEtE,wBAAI9D,UAAU,aACV,0BAAMA,UAAU,YAAhB,SADJ,gCACwE,4BAAQV,KAAK,SAASU,UAAU,mBAAmBoD,QAASlD,KAAK2D,SAAjE,QAExE,wBAAI7D,UAAU,aACV,0BAAMA,UAAU,YAAhB,SADJ,gBACwD,4BAAQV,KAAK,SAASU,UAAU,UAAUoD,QAASlD,KAAK0D,YAAxD,QAExD,wBAAI5D,UAAU,aACV,0BAAMA,UAAU,YAAhB,SADJ,oCAC4E,4BAAQV,KAAK,SAASU,UAAU,qBAAqBoD,QAASlD,KAAK6D,SAAnE,QAE5E,wBAAI/D,UAAU,aACV,0BAAMA,UAAU,YAAhB,UADJ,oCAC6E,4BAAQV,KAAK,SAASU,UAAU,mBAAmBoD,QAASlD,KAAKiE,UAAjE,SAE7E,wBAAInE,UAAU,aACV,0BAAMA,UAAU,YAAhB,UADJ,6BACsE,4BAAQV,KAAK,SAASU,UAAU,qBAAqBoD,QAASlD,KAAK+D,UAAnE,SAEtE,wBAAIjE,UAAU,aACV,0BAAMA,UAAU,YAAhB,SADJ,yBACiE,4BAAQV,KAAK,SAASU,UAAU,qBAAqBoD,QAASlD,KAAKkE,eAAnE,a,GA1E9D3D,IAAMC,WAiFrBwD,EAAgBG,YAAQ,KAAM,CAC9BlF,oBAAqBA,EACrBI,WAAYA,EACZC,sBAAuBA,GAHP6E,CAIjBX,GAEYQ,IClGMI,G,6KAEb,OACI,yBAAKvE,GAAG,gBAAgB,IAAxB,sDACI,uBAAGC,UAAU,uB,GAJaS,IAAMC,YCa1C6D,E,kDACF,WAAY7E,GAAQ,IAAD,8BACf,cAAMA,IAKV8E,cAAgB,SAACC,GACb,EAAKtB,SAAS,CACVuB,eAAgBD,EAAMtE,OAAOwE,SARlB,EAWnBC,aAAe,SAACH,GACZ,GAAsB,KAAlBA,EAAMI,QAAgB,CAGtB,OAFA,EAAKnF,MAAMP,oBAAX,YAAoC,EAAKQ,MAAM+E,iBACjC,EAAK/E,MAAM+E,eAAeI,eAEpC,IAAK,KACD,EAAKpF,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,MACJ,IAAK,MACD,EAAKO,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,MACJ,IAAK,MACD,EAAKO,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,MACJ,IAAK,MACD,EAAKO,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,MACJ,IAAK,MACD,EAAKO,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,MACJ,IAAK,MACD,EAAKO,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,MACJ,IAAK,OACD,EAAKO,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,MACJ,IAAK,OACD,EAAKO,MAAMP,oBAAoB,kBAAC,EAAD,OAC/B,MACJ,IAAK,MACD,EAAKO,MAAMH,aACX,MACJ,QACI,EAAKG,MAAMP,oBAAoB,kBAAC,EAAD,OAGvC,EAAKO,MAAMF,wBACX,EAAK2D,SAAS,CACVuB,eAAgB,OA/CxB,EAAK/E,MAAQ,CACT+E,eAAgB,IAHL,E,qDAsDf,OACI,yBAAK3E,GAAG,iBACH,KACD,2BAAOT,KAAK,OAAOyF,WAAW,QAAQvE,YAAY,cAAcmE,MAAOzE,KAAKP,MAAM+E,eAAgBM,SAAU9E,KAAKsE,cAAeS,QAAS/E,KAAK0E,oB,GA1DnInE,IAAMC,WAgE7BwE,EAAqB,CACrB/F,oBAAqBA,EACrBI,WAAYA,EACZC,sBAAuBA,GAIZ2F,EADCd,YAAQ,KAAMa,EACfC,CAAUZ,GCpFnBa,E,uKAEE,OACI,6BACI,4BAEQlF,KAAKR,MAAM2F,aAAa5D,KAAI,SAAC6D,EAAU3D,GAAX,OACxB,wBAAIC,IAAKD,GAAQ2D,Y,GAPZ7E,IAAMC,WAsBxB2D,eANS,SAAU1E,GAC9B,MAAO,CACH0F,aAAc1F,EAAM0F,gBAIY,KAAzBhB,CAA+Be,GCjBxCG,E,kDACF,WAAY7F,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT6F,mBAAoB,GACpBC,wBAAyB,GACzBC,qBAAsB,CAClB,QAAW,UAGnB,EAAKC,YAAclF,IAAMmF,YATV,E,gEAWE,IAAD,OACZC,EAAc,GACdC,GAAa,EAEbC,EAASC,aAAY,WACD,QAAhBH,EACAA,EAAc,GAEdA,GAAe,IAEnB,EAAK1C,SAAS,CACVsC,wBAAyBI,IAEzBC,IACA,EAAK3C,SAAS,CACVuC,qBAAsB,CAClB,QAAW,UAGnBO,cAAcF,MAEnB,KAEHG,YAAW,WACPJ,GAAa,IACd,MAEH,IACIK,EADe,uGACaC,MAAM,IAClCC,EAAI,EACRH,YAAW,WACP,IAAII,EAASN,aAAY,WACrB,IAAIO,EAAcJ,EAAaE,GAC/B,EAAKlD,SAAS,CACVqC,mBAAoB,EAAK7F,MAAM6F,mBAAqBe,IAEpDF,IAAMF,EAAaK,OAAS,EAC5BP,cAAcK,GAEdD,MAEL,MACJ,O,2CAGH,IAAII,EAAcvG,KAAKyF,YAAYe,QACnCD,EAAYE,UAAYF,EAAYG,aAAeH,EAAYI,e,+BAG/D,OACI,6BAAS9G,GAAG,WAAWC,UAAU,2BAA2B8G,IAAK5G,KAAKyF,aAClE,yBAAK5F,GAAG,yBAAyBgH,MAAO7G,KAAKP,MAAM+F,sBAC/C,yBAAK3F,GAAG,yBAAyBC,UAAU,4BAA3C,mBACqBE,KAAKP,MAAM8F,yBAEhC,yBAAK1F,GAAG,gCAAgCC,UAAU,4BAAlD,UACW,6BADX,WAC0BE,KAAKP,MAAM8F,0BAGzC,uBAAGzF,UAAU,iBAAb,2DACA,uBAAGA,UAAU,kBAAkBE,KAAKP,MAAM6F,oBAC1C,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GA1EO/E,IAAMC,WAsFd2D,eANS,SAAU1E,GAC9B,MAAO,CACHqH,sBAAuBrH,EAAMqH,yBAIG,KAAzB3C,CAA+BkB,GC3FzB0B,G,wDACjB,WAAYvH,GAAQ,IAAD,8BACf,cAAMA,IAyCVwH,YAAc,WACV,EAAK/D,SAAS,CACVgE,SAAU,yBA5CC,EA+CnBC,YAAc,WACV,EAAKjE,SAAS,CACVgE,SAAU,iBAjDC,EAoDnBE,eAAiB,WACb,EAAKlE,SAAS,CACVmE,qBAAsB,YApD1B,EAAK3H,MAAQ,CACTwH,SAAU,cACVI,YAAa,CACT,yBACA,mCACA,+BACA,4BACA,sCACA,kCACA,gCACA,2CACA,iCAEJD,qBAAsB,SACtBE,YAAa,EACbC,OAAQ,GAjBG,E,gEAoBE,IAAD,OAChBvB,YAAW,WACP,IAAIuB,EAAQzB,aAAY,WACpB,IAAI0B,EAAcC,KAAKC,MAAM,EAAKjI,MAAM4H,YAAYf,OAASmB,KAAKE,UAClE,EAAK1E,SAAS,CACVqE,YAAaE,EACbJ,qBAAsB,YAE1BpB,YAAW,WACP,EAAK/C,SAAS,CACVmE,qBAAsB,aAE3B,OACJ,KACH,EAAKnE,SAAS,CACVsE,MAAOA,MAEZ,O,6CAGHxB,cAAc/F,KAAKP,MAAM8H,S,+BAkBzB,OACI,yBAAK1H,GAAG,wBAAwB+H,aAAc5H,KAAKgH,YAAaa,aAAc7H,KAAKkH,aAC/E,yBAAKrH,GAAG,aAAaC,UAAU,2BAA2B+G,MAAO,CAAEiB,WAAY9H,KAAKP,MAAM2H,sBAAwBlE,QAASlD,KAAKmH,gBAAiBnH,KAAKP,MAAM4H,YAAYrH,KAAKP,MAAM6H,cACnL,uBAAGxH,UAAWE,KAAKP,MAAMwH,gB,GA9DL1G,IAAMC,YCErBuH,G,6KAEb,OAMI,yBAAKjI,UAAU,OACX,yBAAKA,UAAU,OACf,yBAAKA,UAAU,WACf,yBAAKA,UAAU,WACf,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAbiBS,IAAMC,Y,OCL1BwH,EAAe,CACxB7C,aAAc,GACd2B,uBAAuB,G,iBCC3B,IAEemB,EAFDC,aCAC,WAAsD,IAAnCC,EAAkC,uDAAtBH,EAAc7H,EAAQ,uCAC5DiI,EAAYC,IAAUF,GAC1B,OAAQhI,EAAOf,MACX,IAAK,wBAED,OADAgJ,EAAUjD,aAAamD,KAAKnI,EAAOhB,MAC5BiJ,EACX,IAAK,cAED,OADAA,EAAUjD,aAAe,GAClBiD,EACX,IAAK,0BAED,OADAA,EAAUtB,uBAAyBsB,EAAUtB,sBACtCsB,EACX,QACI,OAAOD,KDbkBI,OAAOC,8BAAgCD,OAAOC,gCEGnFC,IAASC,OACP,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,EAAD,OACWU,SAASC,eAAe,W","file":"static/js/main.47878614.chunk.js","sourcesContent":["function componentEnterStack(componentObj) {\r\n    return {\r\n        data: componentObj,\r\n        type: \"COMPONENT_ENTER_STACK\"\r\n    };\r\n}\r\n\r\nfunction clearStack() {\r\n    return {\r\n        type: \"CLEAR_STACK\"\r\n    };\r\n}\r\n\r\nfunction triggerTerminalScroll(){\r\n    return {\r\n        type: \"TRIGGER_TERMINAL_SCROLL\"\r\n    };\r\n}\r\n\r\nexport { componentEnterStack, clearStack, triggerTerminalScroll };","import React from 'react';\r\nimport \"../styles/contact.css\";\r\n\r\nexport default class Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            gitHubUrl: \"https://github.com/glv1at118\",\r\n            linkedInUrl: \"https://www.linkedin.com/in/guannan-l-001133127\",\r\n            formspreeActionUrl: \"https://formspree.io/f/mrgygjal\",\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"contact\">\r\n                <div id=\"contact-links\" className=\"nes-container is-rounded\">\r\n                    <i className=\"nes-icon github\"></i>\r\n                    <a href={this.state.gitHubUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        Github <i className=\"fas fa-external-link-alt\"></i>\r\n                    </a><br />\r\n                    <i className=\"nes-icon linkedin\"></i>\r\n                    <a href={this.state.linkedInUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        LinkedIn <i className=\"fas fa-external-link-alt\"></i>\r\n                    </a><br />\r\n                </div>\r\n                <div id=\"divider-text\">Or leave me an online message:</div>\r\n                <div id=\"online-msg\">\r\n                    <form action={this.state.formspreeActionUrl} method=\"POST\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <div className=\"part1\">\r\n                            <input type=\"email\" name=\"sender_email\" placeholder=\"Email...\" className=\"nes-input\" />\r\n                        </div>\r\n                        <div className=\"part2\">\r\n                            <textarea name=\"sender_msg\" placeholder=\"Message...\" className=\"nes-textarea\"></textarea>\r\n                        </div>\r\n                        <div className=\"part3\">\r\n                            <button type=\"submit\" className=\"nes-btn is-warning\">Send Message</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../styles/cv.css';\r\n\r\nexport default class Cv extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            resumeUrl: \"https://drive.google.com/file/d/1Pt13faiqOkes9vqLlVu36b6znWnZz4dU/view?usp=sharing\"\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"cv\" className=\"nes-container is-rounded\">\r\n                <i className=\"far fa-file\"></i>\r\n                <a href={this.state.resumeUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <span className=\"cv-desktop\">See My Resume</span>\r\n                    <span className=\"cv-mobile\">Resume</span> <i className=\"fas fa-external-link-alt\"></i>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../styles/education.css';\r\n\r\nexport default class Education extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            schoolTitle: \"University of Toronto (2016 - 2018)\",\r\n            schoolMajor: \"Master's Degree of Mechanical and Industrial Engineering (GPA 3.85)\"\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <ul id=\"my-edu\">\r\n                <li className=\"school-item\">\r\n                    <div className=\"nes-container is-rounded education\">\r\n                        <p className=\"school-info\">\r\n                            {this.state.schoolTitle}\r\n                        </p>\r\n                        <p className=\"school-info\">\r\n                            {this.state.schoolMajor}\r\n                        </p>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport '../styles/me.css';\r\n\r\nexport default class Me extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            aboutText: \"As an experienced developer who is a core part of my project teams, I deliver high quality codes which meet or exceed the requirements. I help you solve problems with front end, back end, and mobile app development, performance boosting, defect fixing, and even more. My soft skills also guarantee me to output the maximum productivity as well as to support teammates when they need help.\",\r\n            roleText: \"Software Developer - Spring | ASP.NET Core | Angular\"\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"nes-container with-title is-rounded\" id=\"me\">\r\n                <p className=\"title\">About Myself</p>\r\n                <p className=\"self-description\">What Do I Do: {this.state.roleText}</p>\r\n                <p className=\"self-description\">\"{this.state.aboutText}\"</p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../styles/experience.css';\r\n\r\nexport default class Experience extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            experienceList: [\r\n                {\r\n                    roleAndCompany: \"Business & Integration Architect Senior Analyst (Full Time) - Accenture Canada\",\r\n                    timeLine: \"Jul 2022 - Present\",\r\n                    workDid: \"Work with a team of talented developers to build amazing things. Contribute, learn, grow, and become better.\",\r\n                    techUsed: \"ASP.NET Core, Angular, C#, Entity Framework Core, Microsoft SQL Server, Microsoft Azure, RabbitMQ, Ionic Framework\"\r\n                },\r\n                {\r\n                    roleAndCompany: \"Application Developer Full Stack (Contract) - Accenture Canada\",\r\n                    timeLine: \"Jun 2021 - Jul 2022 (1 yr 2 mos)\",\r\n                    workDid: \"Implement and deliver story features of mobile application in an agile sprint framework, with the unit test coverage reaching 90%. Improve the performance of a sub-system by 75% in its loading time via code refactoring and optimization. Maintain production apps, fix defects, and expand existing features.\",\r\n                    techUsed: \"ASP.NET Core, Angular, C#, Entity Framework Core, Microsoft SQL Server, Microsoft Azure, RabbitMQ, Ionic Framework\"\r\n                },\r\n                {\r\n                    roleAndCompany: \"Full Stack Developer (Contract) - Revature\",\r\n                    timeLine: \"Mar 2021 - Jul 2022 (1 yr 5 mos)\",\r\n                    workDid: \"Implement story features on banking project and reimbursement system, with 15% of functionalities exceeding the user expectation. Contribute backend codes to bug bounty board application, support on debugging, unit testing, and code reviews.\",\r\n                    techUsed: \"Spring Framework, Angular, Java EE, Hibernate, PostgreSQL, AWS, Git\"\r\n                },\r\n                {\r\n                    roleAndCompany: \"Software Developer (Apprenticeship) - Somoplay Inc.\",\r\n                    timeLine: \"May 2020 - Dec 2020 (8 mos)\",\r\n                    workDid: \"Develop website landing page, admin management portal, and email template system. Trouble-shoot issues on data rendering, website optimization, and fix defects.\",\r\n                    techUsed: \"JavaScript, Vue.js, Git\"\r\n                },\r\n                {\r\n                    roleAndCompany: \"Software Collaborator (Apprenticeship) - Torneo\",\r\n                    timeLine: \"Feb 2019 - Mar 2020 (1 yr 2 mos)\",\r\n                    workDid: \"Implement stand-alone blog module components, and its content editing system. Develop website responsive sign-in/register page, and mobile navigation component.\",\r\n                    techUsed: \"JavaScript, Vue.js, Git\"\r\n                },\r\n            ]\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <ul id=\"my-exp\">\r\n                {\r\n                    this.state.experienceList.map((exp, index) => {\r\n                        return (\r\n                            <li className=\"exp-item\" key={index}>\r\n                                <div className=\"nes-container is-rounded experience with-title\">\r\n                                    <p className=\"title\">{exp.roleAndCompany}</p>\r\n                                    <p className=\"exp-info\">{exp.workDid}</p>\r\n                                    <p className=\"exp-info\">- Duration: {exp.timeLine}</p>\r\n                                    <p className=\"exp-info\">- Technologies: {exp.techUsed}</p>\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../styles/my-apps.css';\r\n\r\nexport default class MyApps extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            appList: [\r\n                {\r\n                    appTitle: \"Simple Trader App\",\r\n                    appUrl: \"https://gitlab.com/glv1at118/simple-trade-backend\",\r\n                    appDescription: \"Simple Trader is an online marketplace platform that provides a convenient way for people to buy and sell things.\",\r\n                    appTechStack: \"Spring Boot, PostgreSQL, Hibernate, Angular, AWS (RDS, S3, EC2), Git.\"\r\n                },\r\n                {\r\n                    appTitle: \"Expense Reimbursement System\",\r\n                    appUrl: \"https://github.com/glv1at118/expense-reimbursement-system\",\r\n                    appDescription: \"Expense Reimbursement System manages the process of reimbursing employees for expenses incurred during company time.\",\r\n                    appTechStack: \"Java EE, Servlet API, Tomcat, PostgreSQL, JDBC, MVC Design Pattern, JUnit, Mockito, Jackson.\"\r\n                },\r\n                {\r\n                    appTitle: \"Java National Bank\",\r\n                    appUrl: \"https://github.com/glv1at118/java-national-bank\",\r\n                    appDescription: \"Java National Bank is a backend banking management system which provides fruitful features for a bank user and admin.\",\r\n                    appTechStack: \"Java SE, DAO Design Pattern, JDBC, JUnit, Mockito, Log4J, PostgreSQL, AWS (RDS).\"\r\n                },\r\n                {\r\n                    appTitle: \"Student Profile Board\",\r\n                    appUrl: \"https://github.com/glv1at118/student-profile-board\",\r\n                    appDescription: \"Student profile board is a react application that retrieves student information from a given API and do multiple criteria searches.\",\r\n                    appTechStack: \"Javascript (ES5, ES6), HTML5, CSS3, React, Redux, React-Redux.\"\r\n                },\r\n                {\r\n                    appTitle: \"Work Orders Board\",\r\n                    appUrl: \"https://github.com/glv1at118/work-orders-board\",\r\n                    appDescription: \"Work orders board is a react application that retrieves workers information from a given API and do search and sort.\",\r\n                    appTechStack: \"Javascript (ES5, ES6), HTML5, CSS3, React, Redux, React-Redux.\"\r\n                },\r\n                {\r\n                    appTitle: \"Avoid The Bricks\",\r\n                    appUrl: \"https://github.com/glv1at118/Proj-Avoid-the-Bricks\",\r\n                    appDescription: \"Avoid the bricks is a dodge game. You control Tom to help him avoid the falling bricks and try to survive and long as possible. Difficulty adjustment and theme change are supported.\",\r\n                    appTechStack: \"Javascript (ES5), HTML5, CSS3, jQuery, Paint.NET.\"\r\n                },\r\n            ]\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <ul id=\"my-apps\">\r\n                {\r\n                    this.state.appList.map(\r\n                        (appItem, index) => {\r\n                            return (\r\n                                <li className=\"app-item\" key={index}>\r\n                                    <div className=\"nes-container is-rounded side-app with-title\">\r\n                                        <p className=\"title\">\r\n                                            <a href={appItem.appUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                                {appItem.appTitle} <i className=\"fas fa-external-link-alt\"></i>\r\n                                            </a>\r\n                                        </p>\r\n                                        <p className=\"app-info\">\r\n                                            {appItem.appDescription}<br /><br />\r\n                                            - Technologies: {appItem.appTechStack}\r\n                                        </p>\r\n                                    </div>\r\n                                </li>\r\n                            );\r\n                        }\r\n                    )\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../styles/news.css';\r\n\r\nexport default class News extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            headlineNewsList: [],\r\n            apiKey: \"2d8632aa8766423bb537fd74092883c8\",\r\n            topHeadLinesEndpoint: \"https://newsapi.org/v2/top-headlines\",\r\n            pageSize: 50\r\n        };\r\n    }\r\n    getHeadlineNewsList = async (countryCode) => {\r\n        let fetchResult = await fetch(`${this.state.topHeadLinesEndpoint}?country=${countryCode}&pageSize=${this.state.pageSize}`, {\r\n            headers: {\r\n                Authorization: this.state.apiKey\r\n            }\r\n        });\r\n        if (fetchResult.ok) {\r\n            this.setState({\r\n                headlineNewsList: (await fetchResult.json()).articles\r\n            });\r\n        } else {\r\n            throw fetchResult;\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <ul id=\"my-news\">\r\n                <div className=\"btn-group-container nes-container is-rounded\">\r\n                    <p className=\"notice\">Free plan of News API is not accessible on production env!</p>\r\n                    <button type=\"button\" className=\"nes-btn\" onClick={() => { this.getHeadlineNewsList(\"us\") }}>US News</button>\r\n                    <button type=\"button\" className=\"nes-btn\" onClick={() => { this.getHeadlineNewsList(\"ca\") }}>CA News</button>\r\n                    <button type=\"button\" className=\"nes-btn\" onClick={() => { this.getHeadlineNewsList(\"cn\") }}>CN News</button>\r\n                </div>\r\n                {\r\n                    this.state.headlineNewsList.map((newsItem, index) => {\r\n                        return (\r\n                            <li className=\"news-item\" key={index}>\r\n                                <div className=\"nes-container is-rounded side-news with-title\">\r\n                                    <p className=\"title\">\r\n                                        <a href={newsItem.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                            {newsItem.title} <i className=\"fas fa-external-link-alt\"></i>\r\n                                        </a>\r\n                                    </p>\r\n                                    <p className=\"news-info\">\r\n                                        {newsItem.description === null || newsItem.description === \"\" || typeof newsItem.description === \"undefined\" ? 'News brief is not available.' : newsItem.description}<br /><br />\r\n                                        - Published At: {newsItem.publishedAt}\r\n                                    </p>\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport '../styles/help.css';\r\n\r\nimport Me from './Me';\r\nimport Cv from './Cv';\r\nimport Contact from './Contact';\r\nimport Education from './Education';\r\nimport Experience from './Experience';\r\nimport MyApps from './MyApps';\r\nimport News from './News';\r\n\r\nimport { componentEnterStack, clearStack, triggerTerminalScroll } from '../redux/actions.js';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Help extends React.Component {\r\n    showMe = () => {\r\n        this.props.componentEnterStack(<Me></Me>);\r\n        this.props.triggerTerminalScroll();\r\n    }\r\n    showResume = () => {\r\n        this.props.componentEnterStack(<Cv></Cv>);\r\n        this.props.triggerTerminalScroll();\r\n    }\r\n    showExp = () => {\r\n        this.props.componentEnterStack(<Experience></Experience>);\r\n        this.props.triggerTerminalScroll();\r\n    }\r\n    showMyApps = () => {\r\n        this.props.componentEnterStack(<MyApps></MyApps>);\r\n        this.props.triggerTerminalScroll();\r\n    }\r\n    showCon = () => {\r\n        this.props.componentEnterStack(<Contact></Contact>);\r\n        this.props.triggerTerminalScroll();\r\n    }\r\n    showEdu = () => {\r\n        this.props.componentEnterStack(<Education></Education>);\r\n        this.props.triggerTerminalScroll();\r\n    }\r\n    showHelp = () => {\r\n        // 这是个很好的 lessons learnt。\r\n        // 以下这行不可以。实测中发现，这样在debug窗口中的<Help />组件是没有被 react-redux connected 的。\r\n        // 最开始觉得特别 weird，但是也 make sense，因为这里直接调用 <Help /> 是没有被 connect封装的。\r\n        // 既然没有被 connect 封装，那么 redux 中的 store 和 actions 也就没有作为 props 传给 \"这个\" Help组件\r\n        // 所以，当点击这个 Help 组件里的按钮时，它就无法调用 this.props.xxx 这些 action。就会报错。\r\n        // 要让它工作，只能把用 connect 封装过的 Help 传过去。\r\n\r\n        // this.props.componentEnterStack(<Help></Help>);\r\n        this.props.componentEnterStack(<ConnectedHelp></ConnectedHelp>);\r\n        this.props.triggerTerminalScroll();\r\n    }\r\n    showNews = () => {\r\n        this.props.componentEnterStack(<News></News>);\r\n        this.props.triggerTerminalScroll();\r\n    }\r\n    clearTerminal = () => {\r\n        this.props.clearStack();\r\n        this.props.triggerTerminalScroll();\r\n    }\r\n    render() {\r\n        return (\r\n            <ul id=\"my-help\">\r\n                <li className=\"help-title\">Available commands (type or click):</li>\r\n                <li className=\"help-item\">\r\n                    <span className=\"help-cmd\">'me'</span>: Brief introduction of me. <button type=\"button\" className=\"nes-btn is-primary\" onClick={this.showMe}>ME</button>\r\n                </li>\r\n                <li className=\"help-item\">\r\n                    <span className=\"help-cmd\">'edu'</span>: My education history. <button type=\"button\" className=\"nes-btn is-success\" onClick={this.showEdu}>EDU</button>\r\n                </li>\r\n                <li className=\"help-item\">\r\n                    <span className=\"help-cmd\">'app'</span>: Some fun apps I created. <button type=\"button\" className=\"nes-btn is-warning\" onClick={this.showMyApps}>APP</button>\r\n                </li>\r\n                <li className=\"help-item\">\r\n                    <span className=\"help-cmd\">'exp'</span>: Experience as a developer. <button type=\"button\" className=\"nes-btn is-error\" onClick={this.showExp}>EXP</button>\r\n                </li>\r\n                <li className=\"help-item\">\r\n                    <span className=\"help-cmd\">'res'</span>: My resume. <button type=\"button\" className=\"nes-btn\" onClick={this.showResume}>RES</button>\r\n                </li>\r\n                <li className=\"help-item\">\r\n                    <span className=\"help-cmd\">'con'</span>: Want to contact? Here it goes. <button type=\"button\" className=\"nes-btn is-primary\" onClick={this.showCon}>CON</button>\r\n                </li>\r\n                <li className=\"help-item\">\r\n                    <span className=\"help-cmd\">'news'</span>: News headlines for refreshing. <button type=\"button\" className=\"nes-btn is-error\" onClick={this.showNews}>NEWS</button>\r\n                </li>\r\n                <li className=\"help-item\">\r\n                    <span className=\"help-cmd\">'help'</span>: See a list of commands. <button type=\"button\" className=\"nes-btn is-success\" onClick={this.showHelp}>HELP</button>\r\n                </li>\r\n                <li className=\"help-item\">\r\n                    <span className=\"help-cmd\">'cls'</span>: Clear the terminal. <button type=\"button\" className=\"nes-btn is-warning\" onClick={this.clearTerminal}>CLS</button>\r\n                </li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nlet ConnectedHelp = connect(null, {\r\n    componentEnterStack: componentEnterStack,\r\n    clearStack: clearStack,\r\n    triggerTerminalScroll: triggerTerminalScroll\r\n})(Help);\r\n\r\nexport default ConnectedHelp;\r\n// 对于 react-redux 连接的组件，首字母必须大写。\r\n// 如果用标签形式效用，更需要首字母都大写。","import React from 'react';\r\nimport '../styles/unrecognized.css';\r\n\r\nexport default class Unrecognized extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"unrecognized\">{\">\"} Sorry, but your command has drifted to Mars...&nbsp;\r\n                <i className=\"fas fa-rocket\"></i>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport \"../styles/commandinput.css\";\r\n\r\nimport { componentEnterStack, clearStack, triggerTerminalScroll } from '../redux/actions.js';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Contact from './Contact';\r\nimport Cv from './Cv';\r\nimport Education from './Education';\r\nimport Help from './Help';\r\nimport Me from './Me';\r\nimport Unrecognized from './Unrecognized';\r\nimport Experience from './Experience';\r\nimport MyApps from './MyApps';\r\nimport News from './News';\r\n\r\nclass CommandInput extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentCommand: \"\"\r\n        };\r\n    }\r\n    updateCommand = (event) => {\r\n        this.setState({\r\n            currentCommand: event.target.value\r\n        });\r\n    }\r\n    enterCommand = (event) => {\r\n        if (event.keyCode === 13) {\r\n            this.props.componentEnterStack(`> ${this.state.currentCommand}`);\r\n            let command = this.state.currentCommand.toLowerCase();\r\n            switch (command) {\r\n                case \"me\":\r\n                    this.props.componentEnterStack(<Me></Me>);\r\n                    break;\r\n                case \"edu\":\r\n                    this.props.componentEnterStack(<Education></Education>);\r\n                    break;\r\n                case \"app\":\r\n                    this.props.componentEnterStack(<MyApps></MyApps>);\r\n                    break;\r\n                case \"exp\":\r\n                    this.props.componentEnterStack(<Experience></Experience>);\r\n                    break;\r\n                case \"res\":\r\n                    this.props.componentEnterStack(<Cv></Cv>);\r\n                    break;\r\n                case \"con\":\r\n                    this.props.componentEnterStack(<Contact></Contact>);\r\n                    break;\r\n                case \"news\":\r\n                    this.props.componentEnterStack(<News></News>);\r\n                    break;\r\n                case \"help\":\r\n                    this.props.componentEnterStack(<Help></Help>);\r\n                    break;\r\n                case \"cls\":\r\n                    this.props.clearStack();\r\n                    break;\r\n                default:\r\n                    this.props.componentEnterStack(<Unrecognized></Unrecognized>);\r\n                    break;\r\n            }\r\n            this.props.triggerTerminalScroll();\r\n            this.setState({\r\n                currentCommand: \"\"\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"command-input\">\r\n                {\"> \"}\r\n                <input type=\"text\" spellCheck=\"false\" placeholder=\"commands...\" value={this.state.currentCommand} onChange={this.updateCommand} onKeyUp={this.enterCommand} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = {\r\n    componentEnterStack: componentEnterStack,\r\n    clearStack: clearStack,\r\n    triggerTerminalScroll: triggerTerminalScroll\r\n};\r\n\r\nlet connector = connect(null, mapDispatchToProps);\r\nexport default connector(CommandInput);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass CurrentListedItems extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {\r\n                        this.props.guannanStack.map((currItem, index) => (\r\n                            <li key={index}>{currItem}</li>\r\n                        ))\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        guannanStack: state.guannanStack\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(CurrentListedItems);","import React from 'react';\r\nimport \"../styles/terminal.css\";\r\nimport \"nes.css/css/nes.min.css\";\r\nimport CommandInput from './CommandInput';\r\nimport CurrentListedItems from './CurrentListedItems';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nclass Terminal extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            introStringGrowing: \"\",\r\n            terminalLoadingEllipsis: \"\",\r\n            loadingCoverStyleObj: {\r\n                \"display\": \"block\"\r\n            }\r\n        };\r\n        this.terminalRef = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        let ellipsisStr = \"\";\r\n        let timer1Stop = false;\r\n\r\n        let timer1 = setInterval(() => {\r\n            if (ellipsisStr === \"...\") {\r\n                ellipsisStr = \"\";\r\n            } else {\r\n                ellipsisStr += \".\";\r\n            }\r\n            this.setState({\r\n                terminalLoadingEllipsis: ellipsisStr\r\n            });\r\n            if (timer1Stop) {\r\n                this.setState({\r\n                    loadingCoverStyleObj: {\r\n                        \"display\": \"none\"\r\n                    }\r\n                });\r\n                clearInterval(timer1);\r\n            }\r\n        }, 200);\r\n\r\n        setTimeout(() => {\r\n            timer1Stop = true;\r\n        }, 2500);\r\n\r\n        let greetingsStr = \"> Hello! I am Guannan Lyu, welcome to my portfolio terminal. To see a list of commands, type 'help'.\";\r\n        let greetingsArr = greetingsStr.split(\"\");\r\n        let i = 0;\r\n        setTimeout(() => {\r\n            let timer2 = setInterval(() => {\r\n                let currCharStr = greetingsArr[i];\r\n                this.setState({\r\n                    introStringGrowing: this.state.introStringGrowing + currCharStr\r\n                });\r\n                if (i === greetingsArr.length - 1) {\r\n                    clearInterval(timer2);\r\n                } else {\r\n                    i++;\r\n                }\r\n            }, 25);\r\n        }, 4000);\r\n    }\r\n    componentDidUpdate() {\r\n        let terminalDOM = this.terminalRef.current;\r\n        terminalDOM.scrollTop = terminalDOM.scrollHeight - terminalDOM.clientHeight;\r\n    }\r\n    render() {\r\n        return (\r\n            <section id=\"terminal\" className=\"nes-container is-rounded\" ref={this.terminalRef}>\r\n                <div id=\"terminal-loading-cover\" style={this.state.loadingCoverStyleObj}>\r\n                    <div id=\"loading-text-container\" className=\"nes-container is-rounded\">\r\n                        Loading Terminal{this.state.terminalLoadingEllipsis}\r\n                    </div>\r\n                    <div id=\"loading-text-container-mobile\" className=\"nes-container is-rounded\">\r\n                        Loading<br />Terminal{this.state.terminalLoadingEllipsis}\r\n                    </div>\r\n                </div>\r\n                <p className=\"terminalTitle\">GUANNAN'S PORTFOLIO TERMINAL BETA - ALL RIGHTS RESERVED</p>\r\n                <p className=\"greetingsIntro\">{this.state.introStringGrowing}</p>\r\n                <CurrentListedItems></CurrentListedItems>\r\n                <CommandInput></CommandInput>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        terminalScrollTrigger: state.terminalScrollTrigger\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Terminal);","import React from 'react';\r\nimport '../styles/gitcat.css';\r\n\r\nexport default class GitCat extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            catClass: \"nes-octocat\",\r\n            chatMsgList: [\r\n                \"Hi, how are you today?\",\r\n                \"Feeling a bit messy? Type 'cls'.\",\r\n                \"How do you like this design?\",\r\n                \"I am Guannan's robot cat.\",\r\n                \"More functions to be constructed...\",\r\n                \"Have some feedback? Type 'con'.\",\r\n                \"Welcome to my portfolio page.\",\r\n                \"Get lost? Type 'help' to see commands...\",\r\n                \"Life is a journey of growing.\"\r\n            ],\r\n            chatBubbleVisibility: \"hidden\",\r\n            randomMsgId: 0,\r\n            timer: -1\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            let timer = setInterval(() => {\r\n                let randomIndex = Math.floor(this.state.chatMsgList.length * Math.random());\r\n                this.setState({\r\n                    randomMsgId: randomIndex,\r\n                    chatBubbleVisibility: \"visible\"\r\n                });\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        chatBubbleVisibility: \"hidden\"\r\n                    });\r\n                }, 4000);\r\n            }, 10000);\r\n            this.setState({\r\n                timer: timer\r\n            });\r\n        }, 4000);\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.timer);\r\n    }\r\n    handleEnter = () => {\r\n        this.setState({\r\n            catClass: \"nes-octocat animate\"\r\n        });\r\n    }\r\n    handleLeave = () => {\r\n        this.setState({\r\n            catClass: \"nes-octocat\"\r\n        });\r\n    }\r\n    getRidOfBubble = () => {\r\n        this.setState({\r\n            chatBubbleVisibility: \"hidden\"\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"guannan-cat-container\" onMouseEnter={this.handleEnter} onMouseLeave={this.handleLeave}>\r\n                <div id=\"cat-dialog\" className=\"nes-container is-rounded\" style={{ visibility: this.state.chatBubbleVisibility }} onClick={this.getRidOfBubble}>{this.state.chatMsgList[this.state.randomMsgId]}</div>\r\n                <i className={this.state.catClass}></i>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport Terminal from './components/Terminal.jsx';\r\nimport GitCat from './components/GitCat.jsx';\r\nimport \"./styles/app.css\";\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return (\r\n            // <div className=\"app\">\r\n            //   <GitCat></GitCat>\r\n            //   <Terminal></Terminal>\r\n            // </div>\r\n\r\n            <div className=\"app\">\r\n                <div className=\"bg\"></div>\r\n                <div className=\"bg bg2\"></div>\r\n                <div className=\"bg bg3\"></div>\r\n                <GitCat></GitCat>\r\n                <Terminal></Terminal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\nLesson's Learnt: 原来我把 GitCat 组件里的代码，都直接写在 App 组件中了。\r\nTerminal 组件我设计成一旦组件更新，就自动把滚动条调到最后。\r\n因为之前 GitCat 里的代码都写在 App 中，所以 App 中有 state。而 state 会经常变化。\r\n这样一来，App 中的 state 一变，就会调用 render 函数。而 render 函数的调用，就会导致\r\nTerminal 这个组件受到影响。虽然 Terminal 组件里的内容并没有发生任何变化，但是因为\r\n它是被 App 渲染的，所以 App 的 render 调用就会促使 Terminal 组件更新。\r\n也即 Terminal 组件里的 componentDidUpdate 方法会调用。这就造成了 bug，\r\n每次猫弹出对话框时，Terminal 的滚动条都会被拉到底部。这不是我想要的。\r\n\r\n解决办法就是把 GitCat 的代码抽离出来，单独形成一个 GitCat 组件，而不是混在 App 当中。\r\n这样 App 中就不需要有 state了，GitCat代码需要的 state 放到了它自己内部。所以，\r\n每次 GitCat 组件状态更新，都是它自己的事情。App 没有 state更不涉及到更新，所以自然\r\nApp 不会调用自己的 render 函数（而 GitCat 则是每次更新时调用自己的 render 函数）。\r\nApp 不会更新，自然 Terminal 组件就不再受影响了。Terminal 的 componentDidUpdate\r\n也不会被调用，自然不会出现上述的 bug 了。\r\n\r\n而在使用 react-redux之后，Terminal组件因为没有本地 state，所以唯一能够触发它更新的，\r\n只有 Redux store 中通过 connect 给它的那一部分 state。只有那一部分 state更新了，\r\nTerminal组件才会更新。所以这也与 GitCat 组件没有任何关系了。\r\n*/","export const initialState = {\r\n    guannanStack: [],\r\n    terminalScrollTrigger: false\r\n};","import { createStore } from 'redux';\r\nimport myReducer from './reducers.js'\r\n\r\nconst store = createStore(myReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import { initialState } from './initialState.js';\r\nimport clonedeep from 'lodash.clonedeep';\r\n\r\nexport default function myReducer(prevState = initialState, action) {\r\n    let nextState = clonedeep(prevState);\r\n    switch (action.type) {\r\n        case \"COMPONENT_ENTER_STACK\":\r\n            nextState.guannanStack.push(action.data);\r\n            return nextState;\r\n        case \"CLEAR_STACK\":\r\n            nextState.guannanStack = [];\r\n            return nextState;\r\n        case \"TRIGGER_TERMINAL_SCROLL\":\r\n            nextState.terminalScrollTrigger = !nextState.terminalScrollTrigger;\r\n            return nextState;\r\n        default:\r\n            return prevState;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.jsx';\r\nimport store from './redux/store.js';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App></App>\r\n  </Provider>, document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}